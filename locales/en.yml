en:
  command_env:
    logging:
      location:
        server: "#%{channel}, %{server}"
        dm: "direct messages"
      used_command: "%{name} used command \"%{tag}\" in %{location}."
      unknown_command: "%{name} used unknown command \"%{tag}\" in %{location}."
      usage_error: "%{name} encountered a usage error using command \"%{tag}\" in %{location}."
      permission_error: "%{name} was denied use of \"%{tag}\" in %{location}. Reason: %{reason}."
      ignore_server: "Server-ignored user %{name} tried to use \"%{tag}\" in %{location}, but was ignored."
      ignore_global: "Global-ignored user %{name} tried to use \"%{tag}\" in %{location}, but was ignored."
      permission_error_reasons:
        not_bot_owner: 'Not the bot owner'
        lacks_permission: 'Lacks permission %{permission}'
        not_a_member: 'Not a Discordrb::Member'
    errors:
      bot_perm: 
        title: "I don't have permission to do that! Sorry."
        desc: "I need the `%{perm}` permission to make this command work. If you believe this is a mistake, please poke a server staff member."
      usage:
        base:
          title: Looks like you're using the command wrong.
          desc: " Here's how to use `%{prefix}%{command}`.%{usage}"
          footer: "For more information, see %{prefix}help %{command}."
          usage: Usage
          examples: Examples
        missing_arg: Did you forget to provide a value for `%{arg}`?
        wrong_arg_type: Looks like you provided the wrong type of value for `%{arg}`! Here's how you use it.
        no_muted_role: 'You must first define a muted role to use this command! Either create a role with the name "Muted" and the desired effects, or use `%{prefix}setMutedRole` to select an arbitrary role.'
        conversions:
          commands/command:
            nonexistant: "There is no command named `%{arg}`. Use `%{prefix}commands` to see a list of commands."
          packages/package:
            nonexistant: "There is no package named `%{arg}`."
          discordrb/role:
            nonexistant: "I couldn't find a role named `%{arg}`. Sure you got it right?"
          discordrb/channel:
            nonexistant: "I couldn't find a channel named `%{arg}`. Sure you got it right?"
          porygon/version:
            nonexistant: "Version `%{version}` does not exist. Versions are numbered starting from `1`, and the current latest is `%{current}`."
            malformed: "`%{version}` is not a valid version. Versions are positive integers."
          dice_roll:
            malformed: "`%{arg}` is not a valid dice roll. Dice rolls should be either a single positive number representing the number of times to roll, or a value in dice notation, such as `2d20`, representing the number of times to roll and the number of faces per die, respectively."
          poll:
            one_option: "You can't have a poll with only one choice! Provide at least two options, or no options for a yes/no style poll."
            too_many_options: "Hey, that's a little overboard. Polls are limited to %{max} options."
          color:
            malformed: "`%{arg}` isn't a color as var as I can tell!. Valid formats for colours are any of the following: `#ff0000`, `11806a`, or `ff0`."
      unknown:
        title: Hmmm. That's an error.
  commands:
    help:
      _desc: Displays help information about commands.
      _examples:
        - 
        - ping
      with_command:
        command: Command
        aliases: Aliases
        package: Package
        examples: Examples
        usage: Usage
      info:
        title: Hello! I'm Porygon.
        footer:
          text: Created by Dakota.
          icon_url: https://i.imgur.com/uTRBrKS.png
        desc: You can get a list of commands using `%{prefix}commands`. To get detailed information about a specific command, re-run `%{prefix}help` with the name of that command - for example, `%{prefix}help ping`! If anything else confuses you, don't be afraid to ask!
    commands:
      title: Command List
      desc: To get information about a specific command, use `%{prefix}help` with the name of the command. For example, `%{prefix}help ping`.
    pory:
      _desc: Speaks to Porygon. Providing an optional message will allow it to be mixed in to future sentences.
      _examples:
        -
        - how are you today, pory?
    eval:
      _name: Evaluate
      _desc: If you don't know what this does, you shouldn't be using it.
      _args:
        quiet:
          desc: Silences output.
    ping:
      _desc: Says hi from Porygon.
      title: ':sparkles: Pong! Porygon is online~'
      desc: "_beep boop_ How are you all today?"
      footer: "Running Porygon Update #%{version}."
    version:
      _desc: Prints the current version of Porygon.
      title: "Porygon Update #%{version} reporting for duty!"
      desc: "You can see what's new in this version, or any previous version, by using `%{prefix}changelog` with the version number. For example, `%{prefix}changelog %{version}`."
    changelog:
      _desc: Prints information about any version of Porygon. Defaults to the latest version if one is not provided.
      _examples:
        - 
        - 4
      title: "Update #%{version} Changelog"
      changes: Changes
      recency:
        title: Recency
        desc: "✅ This is the latest version."
    hug:
      _desc: Sends an internet hug.
      _args:
        hugged:
          name: thing to hug
      _examples:
        - pory
      title: "You hug **%{hugged}**!"
      desc: ":hugging: **%{hugged}**'s %{stat} rose!"
      stats:
        - Attack
        - Defense
        - Speed
        - Special Attack
        - Special Defense
        - HP
    nudge:
      _desc: Never use this it literally causes natural disasters.
      killed: "%{members} were killed."
      disasters:
        - 'Buildings crumble'
        - 'Earthquakes make their way downtown ziggin fast'
        - 'Cookies crumble'
        - 'Groudon: Emerges'
        - 'A Porytude 7 earthquake!'
        - 'Just imagine Discord shaking'
        - 'Cars tumble down the roads'
        - 'Earthquakes are uncomf'
        - 'Hundreds of books drop from the shelves'
        - 'All the chairs roll away'
        - 'Vases fall and shatter'
        - 'A glass of water spills'
        - 'A plant falls over leaving dirt everywhere'
        - 'Random ceiling tiles fall down'
        - 'The floor shakes and cracks'
    inky:
      _desc: '🥺'
      messages:
        - '🥺'
        - '<:femmeduck:773701798292095008>'
        - "haven't you people heard of closing the goddamn door"
        - 'omg'
        - 'wow Pb why u so old?'
        - "When I was a young boy, my father took me into the city, to see a marching band. He said, \"Son, when you grow up, would you be the savior of the broken, the beaten, and the damned?\" He said, \"Will you defeat them, your demons, and all the non-believers? The plans that they have made? Because one day, I'll leave you, a phantom to lead you in the summer... To join the black parade.\""
        - 'pleading is the most fun an inky can have without taking his clothes off'
    thanos:
      _desc: Rolls the dice on your fate.
      spare: 
        title: You were spared by Thanos. 
        desc: The universe is now perfectly balanced, as all things should be.
      kill: 
        title: Miss Pory... I don't feel so good, you say... 
        desc: You were slain by Thanos, for the good of the Universe.
    calc:
      _name: Calculate
      _desc: Does your math homework.
      _examples:
        - 1 + 1
        - max(1, 2, 3)
      _args:
        variables:
          name: variables
      errors:
        title: _Porygon adjusts her glasses and takes another look at that equation._
        unknown: I wasn't able to parse that at all. Are you sure that's math?
        unbound_variable: 
          one: "Unknown constant `%{vars}`."
          other: "Unknown constants: `%{vars}`."
        parse:
          undefined_function: "`%{func}` isn't a known function. [See a list of valid functions](https://github.com/rubysolo/dentaku#built-in-operators-and-functions)."
          too_many_operands: Seems like you have an extra operand in there. Typo?
          too_few_operands: Seems like you're missing an operand there. Typo?
        token:
          open_paren: Seems that you have an unmatched opening parentheses there.
          close_paren: Seems that you have an unmatched close parentheses there.
      result: Aaaand the answer is...
    flip:
      _desc: Flips a coin.
      _args:
        heads:
          desc: Name of heads coin.
        tails:
          desc: Name of tails coin.
      _examples:
        - 
        - --heads "do it" --tails "don't do it"
      default:
        heads: Heads
        tails: Tails
      result:
        title: Coin Flip
    poll:
      _desc: Creates a simple vote-by-reaction poll. You can add specific options by separating them with pipes (`|`) or leave them off for a yes-no poll. Polls are limited to 10 options as a maxiumum.
      _args:
        poll:
          name: "[question] [| options |]..."
      _examples:
        - should i dye my hair?
        - fav starter? | bulbasaur | charmander | squirtle
      result:
        title: ":bar_chart: %{question}"
        footer: "Vote by reacting with an option below!"
      bools:
        - 👍
        - 👎
      letters:
        - 🇦
        - 🇧
        - 🇨
        - 🇩
        - 🇪
        - 🇫
        - 🇬
        - 🇭
        - 🇮
        - 🇯
        - 🇰
        - 🇱
        - 🇲
        - 🇳
        - 🇴
        - 🇵
        - 🇶
        - 🇷
        - 🇸
        - 🇹
        - 🇺
        - 🇻
        - 🇼
        - 🇽
        - 🇾
        - 🇿
    dice:
      _desc: Rolls one or more dice. Supports dice notation. You can append the `=`, `!=`, `>`, `<`, `>=`, or `<=` operators to compare the result of each roll with a given value, in which case passes and fails will be counted.
      _examples:
        -
        - '3'
        - '3d6'
        - '2d20 >= 10'
      title: Dice Roll
      desc: ":game_die: %{rolls}"
      total: Total
      pass_fail: Pass / Fail
      threshold: Pass Threshold
      pass: (Pass)
      fail: (Fail)
    guild:
      _name: Server Information
      _desc: Prints information about the current server.
      title: Server Information
      name: Name
      owner: Owner
      region: Region
      members: Members
      roles: Roles
      emoji: Emoji
      regions:
        default: ":flag_white: Unknown"
        brazil: ":flag_br: Brazil"
        eu-central: ":flag_eu: Central Europe"
        eu-west: ":flag_eu: Western Europe"
        hongkong: ":flag_hk: Hong Kong"
        japan: ":flag_jp: Japan"
        russia: ":flag_ru: Russia"
        singapore: ":flag_sg: Singapore"
        southafrica: ":flag_za: South Africa"
        sydney: ":flag_au: Sydney"
        us-central: ":flag_us: Central US"
        us-west: ":flag_us: Western US"
        us-east: ":flag_us: Eastern US"
        us-south: ":flag_us: Southern US"
      more_emoji: ", %{count} more..."
    renameserver:
      _name: Rename Server
      _desc: Changes the server name.
      _examples:
        - cool people land
      renamed: 
        title: "Server renamed." 
        desc: "Welcome to %{name}!"
    renamechannel:
      _name: Rename Channel
      _desc: Changes the current channel's name.
      _examples:
        - cool-people-land
      renamed: 
        title: "Channel renamed."
        desc: "Welcome to %{name}!"
    createrole:
      _name: Create Role
      _desc: Creates a role with various options. If used with the `giveme` option, the role will be assigned to you immediately upon creation.
      _examples:
        - cool role
        - ducks --color 14aa70 --giveme
        - <game name here> --requestable --mentionable
        - better admins --hoist --above admins
      created:
        title: "All done!"
        desc: "%{role} has been created."
      'yes': 'Yes'
      'no': 'No'
      color: Color
      hoisted: Hoisted
      requestable: Requestable
      mentionable: Mentionable
    deleterole:
      _name: Delete Role
      _desc: Deletes a role.
      _examples:
        - admins
      deleted:
        title: 'Role deleted!'
        desc: 'You may now carry on with your day.'
    setmodlogchannel:
      _name: Set Mod Log Channel
      _desc: Changes the channel which moderator logs will be sent to. Make sure it's private! You can change this setting at any time, or remove the setting with `removemodlogchannel`.
      _examples:
        - '#logs'
      done:
        title: 'Channel set!'
        desc: 'Mod logs will be printed in %{channel}.'
      already:
        title: "Beat ya to it. Looks like that's already the mod log channel."
        desc: 'No changes made.'
    removemodlogchannel:
      _name: Remove Mod Log Channel
      _desc: Disables mod logging in the channel it's currently set to, if any. **Does not delete the channel itself.**
      done:
        title: 'Mod logging disabled!'
        desc: 'Change this back at any time with `%{prefix}setmodlogchannel`.'
      none:
        title: "Funnily enough, this server doesn't actually *have* a mod log channel."
        desc: 'No changes made.'
    botignore:
      _name: Ignore
      _desc: Ignores a member on the current server.
      _examples:
        - Inky
      done:
        title: "Member ignored!"
        desc: "%{member} can no longer access Porygon on this server."
      no_author:
        title: 'Wait wait wait wait wait.'
        desc: "You can't ignore yourself :("
      already:
        title: "%{member} is already ignored on this server!"
        desc: 'No changes made.'
    botunignore:
      _name: Unignore
      _desc: Unignores a member on the current server.
      _examples:
        - Inky
      done:
        title: "Member unignored!"
        desc: "%{member} can access Porygon on this server again."
      not_ignored:
        title: "%{member} is not ignored on this server!"
        desc: 'No changes made.'
    globalignore:
      _name: Global Ignore
      _desc: Ignores a member on every server.
      _examples:
        - Inky
      done:
        title: "Member ignored!"
        desc: "%{member} can no longer access Porygon on any server."
      no_author:
        title: 'Wait wait wait wait wait.'
        desc: "You can't ignore yourself :("
      already:
        title: "%{member} is already globally ignored!"
        desc: 'No changes made.'
    globalunignore:
      _name: Global Unignore
      _desc: Unignores a member on every server.
      _examples:
        - Inky
      done:
        title: "Member unignored!"
        desc: "%{member} can access Porygon again (note that individual servers may still ignore them)."
      not_ignored:
        title: "%{member} is not globally ignored!"
        desc: 'No changes made.'
    mute:
      _desc: 'Gives a muted role to a member. This command has no effect unless you either have a role named \"Muted\" or have designated a different role as the muted role using `%{prefix}setMutedRole`. No special permissions are applied to the role, you must configure it yourself with whatever permissions you wish to deny from muted users.'
      _examples:
        - Inky
        - Inky --reason "was annoying me"
      muted:
        title: 'Member muted!'
        desc: 'Remove the muted role at any time with `%{prefix}unmute`.'
    package:
      _name: Package Information
      _desc: Shows information about a package.
      _examples:
        - meta
      commands: Commands in this package
  datetime:
    distance_in_words:
      half_a_minute: "half a minute"
      less_than_x_seconds:
        one:   "less than 1 second"
        other: "less than %{count} seconds"
      x_seconds:
        one:   "1 second"
        other: "%{count} seconds"
      less_than_x_minutes:
        one:   "less than a minute"
        other: "less than %{count} minutes"
      x_minutes:
        one:   "1 minute"
        other: "%{count} minutes"
      about_x_hours:
        one:   "about 1 hour"
        other: "about %{count} hours"
      x_days:
        one:   "1 day"
        other: "%{count} days"
      about_x_months:
        one:   "about 1 month"
        other: "about %{count} months"
      x_months:
        one:   "1 month"
        other: "%{count} months"
      about_x_years:
        one:   "about 1 year"
        other: "about %{count} years"
      over_x_years:
        one:   "over 1 year"
        other: "over %{count} years"
      almost_x_years:
        one:   "almost 1 year"
        other: "almost %{count} years"
    prompts:
      year:   "Year"
      month:  "Month"
      day:    "Day"
      hour:   "Hour"
      minute: "Minute"
      second: "Seconds"
  event_logging:
    join_logger:
      joined_console: "%{name}#%{discrim} (%{id}) joined %{server}."
      joined: Member Joined
      name: Name
      discriminator: Discriminator
      id: ID
      age: Account Age
    leave_logger:
      left_console: "%{name}#%{discrim} (%{id}) left %{server}."
      left: Member Left
      name: Name
      discriminator: Discriminator
      id: ID
      joined_at: Joined At
      joined_at_unknown: Unknown
  packages:
    ai:
      name: AI
      desc: The `!pory` command for speaking to the bot.
    games:
      name: Games
      desc: Random utility or fun commands.
    games_duck_only:
      name: Games+ (Duck Communism Only)
      desc: More games, including inside jokes specific to duck communism members. Not available elsewhere.
    package:
      name: Package Management
      desc: Package for commands related to package management.
    meta:
      name: Meta
      desc: Commands about Porygon itself.
    mod:
      name: Moderation
      desc: Mod-only server management.
    guild:
      name: Guild
      desc: Commands relating to the current server.
    operator:
      name: Operator
      desc: Commands to operate and debug Porygon.
  porygon:
    internals:
      startup:
        check: ✓
        load_gems:
          text: Loading gems...
          color: red
        configure_gems:
          text: Configuring loaded gems...
          color: yellow
        load_application:
          text: Loading bot application...
          color: green
        create_bot:
          text: Creating Porygon instance..
          color: blue
        start_bot:
          text: Everything is ready, starting Porygon!
          color: magenta
  changelog:
    12:
      description: No new commands! Just lots of backend stuff.
      changes:
        - 'Changed the way commands are registered, now uses a macro instead of searching through the ancestry tree for children of `Commands::Command`.'
        - 'Split permissions into three systems - member permissions, bot permissions, and owner only permissions.'
        - "Removed bot permission error handling, the bot now checks its permissions ahead of time. This enables better errors as it can tell you exactly what permission it's missing instead of a generic message."
        - "`%{prefix}help`, `%{prefix}commands`, and `%{prefix}!` are now usable in DMs."
        - "All commands now show up in `%{prefix}commands`, even ones the user does not have permission to use. This will change later once package hiding is introduced."
    11:
      changes:
        - 'Removed, split, and merged some packages.'
        - 'Packages are now derived from the filesystem instead of explicitly defined.'
        - 'Removed some unused error utilities and simplified `TranslatedError`.'
        - 'Shorter syntax for defining command arguments.'
        - "Added back the `%{prefix}package` command, but it doesn't do much yet."
        - "Added `%{prefix}globalIgnore` and `%{prefix}globalUnignore`."
        - "Added `%{prefix}botIgnore` and `%{prefix}botUnignore`."
    10:
      changes:
        - 'Turned off Discordrb logging.'
        - 'Add logging of command usage and errors.'
        - 'For security, commands now default to disabled in DMs unless explicitly set otherwise.'
        - 'Added Ruby-style setter command syntax, where `%{prefix}x = ...` is an alias for `%{prefix}setx ...`.'
        - 'Added `%{prefix}renameServer` and `%{prefix}renameChannel`.'
        - 'Rebuilt the permission checks system.'
    9:
      changes:
        - 'Fixed translations for converters inside namespaces.'
        - '`#` is now allowed at the front of a `Porygon::Version` argument.'
    8:
      desc: 'The poll update.'
      changes:
        - 'Added `%{prefix}poll`.'
    7:
      changes:
        - "Package list sorting is now deterministic."
        - "Rewrote arguments parsing (again)"
        - "Added `%{prefix}inky`."
    6:
      changes:
        - "Added `%{prefix}thanos`."
    5:
      changes:
        - "`%{prefix}dice` now uses dice notation instead of flags."
    4:
      changes:
        - "Improved error handling."
        - "Removed the variables feature from `%{prefix}calc`."
        - "`%{prefix}pory` works with quotes now."
        - "Versions are now consecutive integers rather than semver."
    3:
      desc: Mostly meta stuff this time around.
      changes:
        - "Added `%{prefix}version` and `%{prefix}changelog`."
        - "`%{prefix}ping` now uses an embed."
        - "Renamed package `debug` to `meta`."
    2:
      desc: This update includes many minor changes to command semantics.
      changes:
        - "Added `%{prefix}help` and `%{prefix}commands`."
        - "Pory is back to generating one sentence instead of two. Funnier."
        - "You can put multiple words in command options now by wrapping them in quotes, such as `%{prefix}flip -h \"do it\" -t \"don't do it\"`."
        - "`%{prefix}calc` is much smarter now, has better error messages and lets you define variables in a block at the beginning `%{prefix}calc x = 1, y = 2 || x + y`."
        - "Re-broke `%{prefix}dice` working with zero rolls. For now."
    1:
      desc: In the beginning, Porygon was created.